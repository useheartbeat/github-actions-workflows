on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-20.04

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Slack status
        if: always()
        uses: act10ns/slack@v2.0.0
        with:
          status: starting
          channel: '#github-actions'
          message: Starting Docker Build and Push...
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::631720813209:role/GitHubRole
          aws-region: us-east-1
          role-session-name: actions-${{ inputs.env }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set short SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get branch name
        id: branch
        run: echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

#       - name: Build, tag, and push image to Amazon ECR
#         id: build
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: hb-${{ inputs.service }}
#           IMAGE_TAG: ${{ steps.sha.outputs.sha_short }}
#         run: |
#           echo "building and pushing to: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg githubUsername=hbh-github --build-arg githubToken=${{ secrets.GH_TOKEN }} .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Check if branch is up to date
        id: checkCurrent
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          set -x
          DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
          git fetch
          git checkout $DEFAULT_BRANCH
          git checkout -
          if ! git merge-base --is-ancestor $DEFAULT_BRANCH HEAD; then
            echo "current='False'" >> $GITHUB_OUTPUT
          else
             echo "current='True'" >> $GITHUB_OUTPUT
          fi

      - name: Post final status
        if: always()
        uses: act10ns/slack@v2.0.0
        with:
          status: ${{ job.status }}
          channel: '#github-actions'
          message: Build ${{ job.status }}, logs at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}. Ref: ${{ github.ref }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Trigger deploy to Dev
        if: |
          startsWith(steps.branch.outputs.branch, 'hotfix') ||
          startsWith(steps.branch.outputs.branch, 'feature') ||
          startsWith(steps.branch.outputs.branch, 'fix') ||
          startsWith(steps.branch.outputs.branch, 'test') ||
          github.ref == 'refs/heads/main' ||
          github.ref == 'refs/heads/master'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: useheartbeat/heartbeat-${{ inputs.service }}
          event-type: trigger-dev-deploy
          client-payload: '{"sha": "${{ steps.sha.outputs.sha_short }}","branch": "${{ steps.branch.outputs.branch }}"}'
